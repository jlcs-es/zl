Configuracion
  fps <- 60
Fin

Subrutina Primitiva Fondo
Datos
  r es Numero de Entrada
  g es Numero de Entrada
  b es Numero de Entrada
Algoritmo
  /*
  var c = document.getElementById("canvas");
  var ctx = c.getContext("2d");
  ctx.fillStyle = "rgba("+~~$entrada.r+","+~~$entrada.g+","+~~$entrada.b+",255)";
  ctx.fillRect(0, 0, c.width, c.height);
  */
Fin

Subrutina Primitiva Elipse
Datos
  centrox es Numero de Entrada
  centroy es Numero de Entrada
  ancho es Numero de Entrada
  alto es Numero de Entrada
Algoritmo
  /*
  var c = document.getElementById("canvas");
  var ctx = c.getContext("2d");
  var w = $entrada.ancho >= 0 ? $entrada.ancho : 0;
	var h = $entrada.alto >= 0 ? $entrada.alto : 0;
  var x = $entrada.centrox;
  var y = $entrada.centroy;
	ctx.beginPath();
	if (w == h) {
		ctx.arc(x,y,w / 2, 0, 6.283185307179586, false);
	} else {
		var w2 = w/2;
		var h2 = h/2;
		x -= w2;
		y -= h2;
		var kappa = 0.5522848,
		ox = (w2) * kappa, // control point offset horizontal
		oy = (h2) * kappa, // control point offset vertical
		xe = x + w,           // x-end
		ye = y + h,           // y-end
		xm = x + w2,       // x-middle
		ym = y + h2;       // y-middle

		ctx.moveTo(x, ym);
		ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);
		ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);
		ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
		ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);
	}
	ctx.closePath();
  if ($global.$estiloRelleno) {
    //ctx.globalAlpha = fillAlpha;
    ctx.fill();
  }
  if ($global.$estiloBordes) {
    //ctx.globalAlpha = strokeAlpha;
    ctx.stroke();
  }
  */
Fin

Subrutina Primitiva rectangulo
Datos
  posx es Numero de Entrada
  posy es Numero de Entrada
  ancho es Numero de Entrada
  alto es Numero de Entrada
Algoritmo
  /*
  var c = document.getElementById("canvas");
  var ctx = c.getContext("2d");
  var w = $entrada.ancho >= 0 ? $entrada.ancho : 0;
  var h = $entrada.alto >= 0 ? $entrada.alto : 0;
  //if (lineWidth % 2 == 1) ctx.translate(0.5,0.5);
  ctx.beginPath();
  ctx.rect($entrada.posx,$entrada.posy,w,h);
  ctx.closePath();
  if ($global.$estiloRelleno) {
    //ctx.globalAlpha = fillAlpha;
    ctx.fill();
  }
  if ($global.$estiloBordes) {
    //ctx.globalAlpha = strokeAlpha;
    ctx.stroke();
  }
  //if (lineWidth % 2 == 1) ctx.translate(-0.5,-0.5);
  */
Fin

Subrutina Primitiva colorRelleno
Datos
  r es Numero de Entrada
  g es Numero de Entrada
  b es Numero de Entrada
Algoritmo
  /*
  var c = document.getElementById("canvas");
  var ctx = c.getContext("2d");
  ctx.fillStyle = "rgb("+~~$entrada.r+","+~~$entrada.g+","+~~$entrada.b+")";
  $global.$estiloRelleno = {
    r: $entrada.r,
    g: $entrada.g,
    b: $entrada.b
  };
  */
Fin

Subrutina Primitiva grosorBorde
Datos
	grosor es Numero de Entrada
Algoritmo
	/*
	var w = $entrada.grosor >= 0 ? $entrada.grosor : 0;
  var c = document.getElementById("canvas");
  var ctx = c.getContext("2d");
  //lineWidth = w;
	ctx.lineWidth = w;
  */
Fin

Subrutina Primitiva colorBorde
Datos
  r es Numero de entrada
  g es Numero de entrada
  b es Numero de entrada
Algoritmo
  /*
  var c = document.getElementById("canvas");
  var ctx = c.getContext("2d");
	$global.$estiloBordes = "rgb(" + $entrada.r + "," + $entrada.g + "," + $entrada.b + ")";
	ctx.strokeStyle = $global.$estiloBordes;
	//strokeAlpha = parseFloat(a);
  */
Fin

Subrutina Primitiva SinRelleno
Datos

Algoritmo
	/*
  delete $global.$estiloRelleno;
  */
Fin

Subrutina Primitiva SinBorde
Datos

Algoritmo
	/*
  delete $global.$estiloBordes;
  */
Fin

Subrutina Primitiva Delta
Datos
  resultado es Numero de salida
Algoritmo
	/*
  $global.lasttime = $global.lasttime || new Date();
  var l = new Date();
  $salida.resultado = (l - $global.lasttime)/1000;
  $global.lasttime = l;
  */
Fin

Subrutina Inicio
Datos
  px es Numero
  py es Numero
  alto es Numero
  ancho es Numero
Algoritmo
  Fondo [
    r <- 255
    g <- 255
    b <- 255
  ]
  px <- 900
  py <- 200
  alto <- 200
  ancho <- 300
  // Cuerpo
  colorrelleno [
    r <- 255
    g <- 215
    b <- 101
  ]
  rectangulo [
    posx <- px-150
    posy <- py
    ancho <- ancho
    alto <- alto
  ]
  elipse [
    centrox <- px
    centroy <- py
    ancho <- ancho
    alto <- alto
  ]
  pausar
  // Mono
    colorrelleno [
    r <- 59
    g <- 103
    b <- 133
  ]
  elipse [
    centrox <- px
    centroy <- py+alto
    ancho <- ancho
    alto <- alto
  ]
  rectangulo [
    posx <- px+(ancho*0.1)
    posy <- py+(alto*1.4)
    ancho <- 30
    alto <- 30
  ]
  rectangulo [
    posx <- px-(ancho*0.1)-30
    posy <- py+(alto*1.4)
    ancho <- 30
    alto <- 30
  ]
  pausar
  // Brazos y pies
  colorrelleno [
    r <- 255
    g <- 215
    b <- 101
  ]
  rectangulo [
    posx <- px
    posy <- py+alto*0.5
    ancho <- ancho
    alto <- 30
  ]
  rectangulo [
    posx <- px-ancho
    posy <- py+alto*0.5
    ancho <- ancho
    alto <- 30
  ]
  pausar
  // Ojos
  colorrelleno [
    r <- 255
    g <- 255
    b <- 255
  ]
  elipse [
    centrox <- px-ancho*0.15-1
    centroy <- py
    ancho <- ancho*0.3
    alto <- ancho*0.3
  ]
  elipse [
    centrox <- px+ancho*0.15+1
    centroy <- py
    ancho <- ancho*0.3
    alto <- ancho*0.3
  ]
  colorrelleno [
    r <- 113
    g <- 76
    b <- 56
  ]
  elipse [
    centrox <- px+ancho*0.15+1
    centroy <- py
    ancho <- ancho*0.15
    alto <- ancho*0.15
  ]
  colorrelleno [
    r <- 129
    g <- 118
    b <- 73
  ]
  elipse [
    centrox <- px-ancho*0.15+1
    centroy <- py
    ancho <- ancho*0.15
    alto <- ancho*0.15
  ]
  colorrelleno [
    r <- 0
    g <- 0
    b <- 0
  ]
  elipse [
    centrox <- px+ancho*0.15+1
    centroy <- py
    ancho <- ancho*0.07
    alto <- ancho*0.07
  ]
  elipse [
    centrox <- px-ancho*0.15+1
    centroy <- py
    ancho <- ancho*0.07
    alto <- ancho*0.07
  ]
  pausar
  // Boca
  elipse [
    centrox <- px
    centroy <- py+alto/2
    ancho <- ancho*0.6
    alto <- ancho*0.15
  ]
  colorrelleno [
    r <- 255
    g <- 215
    b <- 101
  ]
  rectangulo [
    posx <- px-ancho/2
    posy <- py+alto/2-ancho*0.075
    ancho <- ancho
    alto <- ancho*0.075
  ]
  pausar
  // Gafas
  colorrelleno [
    r <- 0
    g <- 0
    b <- 0
  ]
  rectangulo [
    posx <- px+ancho*0.3+1
    posy <- py-ancho*0.0375
    ancho <- ancho*0.2
    alto <- ancho*0.075
  ]
  rectangulo [
    posx <- px-ancho*0.5+1
    posy <- py-ancho*0.0375
    ancho <- ancho*0.2
    alto <- ancho*0.075
  ]
  sinrelleno []
  colorborde [
    r <- 140
    g <- 140
    b <- 140
  ]
  grosorborde [
    grosor <- 10
  ]
  elipse [
    centrox <- px-ancho*0.15-1
    centroy <- py
    ancho <- ancho*0.3
    alto <- ancho*0.3
  ]
  elipse [
    centrox <- px+ancho*0.15+1
    centroy <- py
    ancho <- ancho*0.3
    alto <- ancho*0.3
  ]
  pausar
  // Resto del mono
  sinborde []
  colorrelleno [
    r <- 255
    g <- 215
    b <- 101
  ]
  rectangulo [
    posx <- px-ancho/2
    posy <- py+alto*0.65
    ancho <- ancho
    alto <- alto*0.35
  ]
  colorrelleno [
    r <- 59
    g <- 103
    b <- 133
  ]
  rectangulo [
    posx <- px-ancho*0.35
    posy <- py+alto*0.80
    ancho <- ancho*0.7
    alto <- alto*0.20
  ]
  pausar
  // Zapatos
  colorrelleno [
    r <- 0
    g <- 0
    b <- 0
  ]
  rectangulo [
    posx <- px+(ancho*0.1)
    posy <- py+(alto*1.4)+30
    ancho <- 60
    alto <- 30
  ]
  rectangulo [
    posx <- px-(ancho*0.1)-60
    posy <- py+(alto*1.4)+30
    ancho <- 60
    alto <- 30
  ]
  elipse [
    centrox <- px-(ancho*0.1)-60
    centroy <- py+(alto*1.4)+45
    ancho <- 30
    alto <- 30
  ]
  elipse [
    centrox <- px+(ancho*0.1)+60
    centroy <- py+(alto*1.4)+45
    ancho <- 30
    alto <- 30
  ]
Fin
